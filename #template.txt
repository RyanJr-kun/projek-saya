#blade templating engine dashboard
<x-layout>
    {{-- breadcrumb --}}
        @section('breadcrumb')
            @php
            // Definisikan item breadcrumb dalam bentuk array
            $breadcrumbItems = [
                ['name' => 'Page', 'url' => '/dashboard'],
                ['name' => 'Manajemen Produk', 'url' => route('produk.index')],
                ['name' => 'Buat Produk Baru', 'url' => '#'],
            ];
            @endphp
            <x-breadcrumb :items="$breadcrumbItems" />
        @endsection
    {{-- notif-success-create-user --}}
        @if (session()->has('success'))
            <div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 1055">
            <div id="successToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header bg-success text-white">
                    <span class="alert-icon text-light me-2"><i class="fa fa-thumbs-up"></i></span>
                    <strong class="me-auto">Notifikasi</strong>
                    <small class="text-light">Baru saja</small>
                    <button type="button" class="btn-close btn-light" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    {{ session('success') }}
                </div>
            </div>
        </div>
        @endif



    @push('scripts')
        {{-- untuk perhalus scrollbar di user windows --}}
            <script>
                var win = navigator.platform.indexOf('Win') > -1;
                if (win && document.querySelector('#sidenav-scrollbar')) {
                var options = {
                    damping: '0.5'
                }
                Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
                }
            </script>
    @endpush
</x-layout>


#template Autoslug
// model untuk isi slug otomatis
use Cviebrock\EloquentSluggable\Sluggable;

class Post extends Model
{
    use Sluggable;

    /**
     * Return the sluggable configuration array for this model.
     *
     * @return array
     */
    public function sluggable(): array
    {
        return [
            'slug' => [
                'source' => 'nama_produk '
            ]
        ];
    }
}

//bikin routes
route::get('users/chekSlug', [ProdukController::class, 'chekSlug'])->midleware('auth');

//kalo udah, masukin js ini ke blade
<script>
const nama_produk = document.querySelector('#nama_produk ')
const slug = document.querySelector('#slug')

title.addEventListener('change', function(){
    fecth('/users/chekSlug?title=' + title.value')
        .then(response => response.json())
        .then(data => slug.value = data.slug)
});
</script>

//taro ini di controller
use \Cviebrock\EloquentSluggable\Services\SlugService;

public function chekSlug(Request $request) {
    $slug = SlugService::createSlug(model::class, 'slug', $request->nama_produk );
    return response()->json(['slug' => $slug])
}
